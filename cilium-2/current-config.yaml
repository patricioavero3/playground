node: 127.0.0.1
metadata:
    namespace: config
    type: MachineConfigs.config.talos.dev
    id: persistent
    version: 1
    owner:
    phase: running
    created: 2025-07-29T03:05:24Z
    updated: 2025-07-29T03:05:24Z
spec: "version: v1alpha1 # Indicates the schema used to decode the contents.\ndebug: false # Enable verbose logging to the console.\npersist: true\n# Provides machine specific configuration options.\nmachine:\n    type: controlplane # Defines the role of the machine within the cluster.\n    token: h8kb0d.8wqv5iayexy12vh1 # The `token` is used by a machine to join the PKI of the cluster.\n    # The root certificate authority of the PKI.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBK0N5THpiMkpXVHlxc1dSRHkvbXMzekFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qVXdOekk1TURNd05USXdXaGNOTXpVd056STNNRE13TlRJd1dqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQUw1VlF1Q3ltdC80QklaRXc5d29BcU9MUEFlNGtCL2M2MlJQCkNNM3ZvUEdLbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkx6b0ZJS1ZUckZkOExnNgp4aGNYREVkVG9BMXdNQVVHQXl0bGNBTkJBQzJnSGRmenRETmljbjN5TFh4VkpmcUlVandRS2Q0Tm1kdGNqZEpRCmMvK0hBbTNCZTFvUlluVFpZOGdoNnVFS3lxNFdYNlpiR0dWSFpPTmJBcWlDNVFRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJS1owVGxpTnhVY2Rrb1VsK3BBcmVjUGphOVNrTllHRzc1ZlpUODE5TnB3MQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K\n    # Extra certificate subject alternative names for the machine's certificate.\n    certSANs:\n        - 127.0.0.1\n    # Used to provide additional options to the kubelet.\n    kubelet:\n        image: ghcr.io/siderolabs/kubelet:v1.33.2 # The `image` field is an optional reference to an alternative kubelet image.\n        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.\n        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.\n        \n        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.\n        # clusterDNS:\n        #     - 10.96.0.10\n        #     - 169.254.2.53\n\n        # # The `extraArgs` field is used to provide additional flags to the kubelet.\n        # extraArgs:\n        #     key: value\n\n        # # The `extraMounts` field is used to add additional mounts to the kubelet container.\n        # extraMounts:\n        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.\n        #       type: bind # Type specifies the mount kind.\n        #       source: /var/lib/example # Source specifies the source path of the mount.\n        #       # Options are fstab style mount options.\n        #       options:\n        #         - bind\n        #         - rshared\n        #         - rw\n\n        # # The `extraConfig` field is used to provide kubelet configuration overrides.\n        # extraConfig:\n        #     serverTLSBootstrap: true\n\n        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.\n        # credentialProviderConfig:\n        #     apiVersion: kubelet.config.k8s.io/v1\n        #     kind: CredentialProviderConfig\n        #     providers:\n        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1\n        #           defaultCacheDuration: 12h\n        #           matchImages:\n        #             - '*.dkr.ecr.*.amazonaws.com'\n        #             - '*.dkr.ecr.*.amazonaws.com.cn'\n        #             - '*.dkr.ecr-fips.*.amazonaws.com'\n        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'\n        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'\n        #           name: ecr-credential-provider\n\n        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.\n        # nodeIP:\n        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.\n        #     validSubnets:\n        #         - 10.0.0.0/8\n        #         - '!10.0.0.3/32'\n        #         - fdc7::/16\n    # Provides machine specific network configuration options.\n    network:\n        # `interfaces` is used to define the network interface configuration.\n        interfaces:\n            - interface: eth0 # The interface name.\n              ignore: true # Indicates if the interface should be ignored (skips configuration).\n              \n              # # Picks a network device using the selector.\n\n              # # select a device with bus prefix 00:*.\n              # deviceSelector:\n              #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n              # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n              # deviceSelector:\n              #     hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.\n              #     driver: virtio_net # Kernel driver, supports matching by wildcard.\n              # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n              # deviceSelector:\n              #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n              #     - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.\n              #       driver: virtio_net # Kernel driver, supports matching by wildcard.\n\n              # # Assigns static IP addresses to the interface.\n              # addresses:\n              #     - 10.5.0.0/16\n              #     - 192.168.3.7\n\n              # # A list of routes associated with the interface.\n              # routes:\n              #     - network: 0.0.0.0/0 # The route's network (destination).\n              #       gateway: 10.5.0.1 # The route's gateway (if empty, creates link scope route).\n              #     - network: 10.2.0.0/16 # The route's network (destination).\n              #       gateway: 10.2.0.1 # The route's gateway (if empty, creates link scope route).\n\n              # # Bond specific options.\n              # bond:\n              #     # The interfaces that make up the bond.\n              #     interfaces:\n              #         - enp2s0\n              #         - enp2s1\n              #     # Picks a network device using the selector.\n              #     deviceSelectors:\n              #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n              #         - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.\n              #           driver: virtio_net # Kernel driver, supports matching by wildcard.\n              #     mode: 802.3ad # A bond option.\n              #     lacpRate: fast # A bond option.\n\n              # # Bridge specific options.\n              # bridge:\n              #     # The interfaces that make up the bridge.\n              #     interfaces:\n              #         - enxda4042ca9a51\n              #         - enxae2a6774c259\n              #     # Enable STP on this bridge.\n              #     stp:\n              #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.\n\n              # # Configure this device as a bridge port.\n              # bridgePort:\n              #     master: br0 # The name of the bridge master interface\n\n              # # Indicates if DHCP should be used to configure the interface.\n              # dhcp: true\n\n              # # DHCP specific options.\n              # dhcpOptions:\n              #     routeMetric: 1024 # The priority of all routes received via DHCP.\n\n              # # Wireguard specific configuration.\n\n              # # wireguard server example\n              # wireguard:\n              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n              #     listenPort: 51111 # Specifies a device's listening port.\n              #     # Specifies a list of peer configurations to apply to a device.\n              #     peers:\n              #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n              #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.\n              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n              #           allowedIPs:\n              #             - 192.168.1.0/24\n              # # wireguard peer example\n              # wireguard:\n              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n              #     # Specifies a list of peer configurations to apply to a device.\n              #     peers:\n              #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n              #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.\n              #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.\n              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n              #           allowedIPs:\n              #             - 192.168.1.0/24\n\n              # # Virtual (shared) IP address configuration.\n\n              # # layer2 vip example\n              # vip:\n              #     ip: 172.16.199.55 # Specifies the IP address to be used.\n        \n        # # Used to statically set the nameservers for the machine.\n        # nameservers:\n        #     - 8.8.8.8\n        #     - 1.1.1.1\n\n        # # Used to statically set arbitrary search domains.\n        # searchDomains:\n        #     - example.org\n        #     - example.com\n\n        # # Allows for extra entries to be added to the `/etc/hosts` file\n        # extraHostEntries:\n        #     - ip: 192.168.1.100 # The IP of the host.\n        #       # The host alias.\n        #       aliases:\n        #         - example\n        #         - example.domain.tld\n\n        # # Configures KubeSpan feature.\n        # kubespan:\n        #     enabled: true # Enable the KubeSpan feature.\n    # Used to provide instructions for installations.\n    install:\n        image: ghcr.io/siderolabs/installer:v1.10.5 # Allows for supplying the image used to perform the installation.\n        wipe: false # Indicates if the installation disk should be wiped at installation time.\n        \n        # # The disk used for installations.\n        # disk: /dev/sda\n        # disk: /dev/nvme0\n\n        # # Look up disk using disk attributes like model, size, serial and others.\n        # diskSelector:\n        #     size: 4GB # Disk size.\n        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.\n        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.\n\n        # # Allows for supplying extra kernel args via the bootloader.\n        # extraKernelArgs:\n        #     - talos.platform=metal\n        #     - reboot=k\n    # Used to configure the machine's container image registry mirrors.\n    registries: {}\n    # # Specifies mirror configuration for each registry host namespace.\n    # mirrors:\n    #     ghcr.io:\n    #         # List of endpoints (URLs) for registry mirrors to use.\n    #         endpoints:\n    #             - https://registry.insecure\n    #             - https://ghcr.io/v2/\n\n    # # Specifies TLS & auth configuration for HTTPS image registries.\n    # config:\n    #     registry.insecure:\n    #         # The TLS configuration for the registry.\n    #         tls:\n    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).\n    #             \n    #             # # Enable mutual TLS authentication with the registry.\n    #             # clientIdentity:\n    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #         \n    #         # # The auth configuration for this registry.\n    #         # auth:\n    #         #     username: username # Optional registry authentication.\n    #         #     password: password # Optional registry authentication.\n\n    # Features describe individual Talos features that can be switched on or off.\n    features:\n        rbac: true # Enable role-based access control (RBAC).\n        stableHostname: true # Enable stable default hostname.\n        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.\n        diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.\n        # KubePrism - local proxy/load balancer on defined port that will distribute\n        kubePrism:\n            enabled: true # Enable KubePrism support - will start local load balancing proxy.\n            port: 7445 # KubePrism port.\n        # Configures host DNS caching resolver.\n        hostDNS:\n            enabled: true # Enable host DNS caching resolver.\n            forwardKubeDNSToHost: true # Use the host DNS resolver as upstream for Kubernetes CoreDNS pods.\n        \n        # # Configure Talos API access from Kubernetes pods.\n        # kubernetesTalosAPIAccess:\n        #     enabled: true # Enable Talos API access from Kubernetes pods.\n        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.\n        #     allowedRoles:\n        #         - os:reader\n        #     # The list of Kubernetes namespaces Talos API access is available from.\n        #     allowedKubernetesNamespaces:\n        #         - kube-system\n    # Configures the node labels for the machine.\n    nodeLabels:\n        node.kubernetes.io/exclude-from-external-load-balancers: \"\"\n    \n    # # Provides machine specific control plane configuration options.\n\n    # # ControlPlane definition example.\n    # controlPlane:\n    #     # Controller manager machine specific configuration options.\n    #     controllerManager:\n    #         disabled: false # Disable kube-controller-manager on the node.\n    #     # Scheduler machine specific configuration options.\n    #     scheduler:\n    #         disabled: true # Disable kube-scheduler on the node.\n\n    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.\n\n    # # nginx static pod.\n    # pods:\n    #     - apiVersion: v1\n    #       kind: pod\n    #       metadata:\n    #         name: nginx\n    #       spec:\n    #         containers:\n    #             - image: nginx\n    #               name: nginx\n\n    # # Allows the addition of user specified files.\n\n    # # MachineFiles usage example.\n    # files:\n    #     - content: '...' # The contents of the file.\n    #       permissions: 0o666 # The file's permissions in octal.\n    #       path: /tmp/file.txt # The path of the file.\n    #       op: append # The operation to use\n\n    # # The `env` field allows for the addition of environment variables.\n\n    # # Environment variables definition examples.\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: info\n    #     GRPC_GO_LOG_VERBOSITY_LEVEL: \"99\"\n    #     https_proxy: http://SERVER:PORT/\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: error\n    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/\n    # env:\n    #     https_proxy: http://DOMAIN\\USERNAME:PASSWORD@SERVER:PORT/\n\n    # # Used to configure the machine's time settings.\n\n    # # Example configuration for cloudflare ntp server.\n    # time:\n    #     disabled: false # Indicates if the time service is disabled for the machine.\n    #     # description: |\n    #     servers:\n    #         - time.cloudflare.com\n    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.\n\n    # # Used to configure the machine's sysctls.\n\n    # # MachineSysctls usage example.\n    # sysctls:\n    #     kernel.domainname: talos.dev\n    #     net.ipv4.ip_forward: \"0\"\n    #     net/ipv6/conf/eth0.100/disable_ipv6: \"1\"\n\n    # # Used to configure the machine's sysfs.\n\n    # # MachineSysfs usage example.\n    # sysfs:\n    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance\n\n    # # Machine system disk encryption configuration.\n    # systemDiskEncryption:\n    #     # Ephemeral partition encryption.\n    #     ephemeral:\n    #         provider: luks2 # Encryption provider to use for the encryption.\n    #         # Defines the encryption keys generation and storage method.\n    #         keys:\n    #             - # Deterministically generated key from the node UUID and PartitionLabel.\n    #               nodeID: {}\n    #               slot: 0 # Key slot number for LUKS2 encryption.\n    #               \n    #               # # KMS managed encryption key.\n    #               # kms:\n    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.\n    #         \n    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.\n    #         # cipher: aes-xts-plain64\n\n    #         # # Defines the encryption sector size.\n    #         # blockSize: 4096\n\n    #         # # Additional --perf parameters for the LUKS2 encryption.\n    #         # options:\n    #         #     - no_read_workqueue\n    #         #     - no_write_workqueue\n\n    # # Configures the udev system.\n    # udev:\n    #     # List of udev rules to apply to the udev system\n    #     rules:\n    #         - SUBSYSTEM==\"drm\", KERNEL==\"renderD*\", GROUP=\"44\", MODE=\"0660\"\n\n    # # Configures the logging system.\n    # logging:\n    #     # Logging destination.\n    #     destinations:\n    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are \"tcp\" and \"udp\".\n    #           format: json_lines # Logs format.\n\n    # # Configures the kernel.\n    # kernel:\n    #     # Kernel modules to load.\n    #     modules:\n    #         - name: brtfs # Module name.\n\n    # # Configures the seccomp profiles for the machine.\n    # seccompProfiles:\n    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.\n    #       # The `value` field is used to provide the seccomp profile.\n    #       value:\n    #         defaultAction: SCMP_ACT_LOG\n\n    # # Override (patch) settings in the default OCI runtime spec for CRI containers.\n\n    # # override default open file limit\n    # baseRuntimeSpecOverrides:\n    #     process:\n    #         rlimits:\n    #             - hard: 1024\n    #               soft: 1024\n    #               type: RLIMIT_NOFILE\n\n    # # Configures the node annotations for the machine.\n\n    # # node annotations example.\n    # nodeAnnotations:\n    #     customer.io/rack: r13a25\n\n    # # Configures the node taints for the machine. Effect is optional.\n\n    # # node taints example.\n    # nodeTaints:\n    #     exampleTaint: exampleTaintValue:NoSchedule\n# Provides cluster specific configuration options.\ncluster:\n    id: BTHX8RoG6ItO7mbyXg9lj7R2fl6t4aFXodsj5VtI-Qg= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).\n    secret: 9wvUjYP6ml8fGLHH5O98mMoTSKyIhKyTDbuFaD4cesk= # Shared secret of cluster (base64 encoded random 32 bytes).\n    # Provides control plane specific configuration options.\n    controlPlane:\n        endpoint: https://10.5.0.2:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.\n    clusterName: istio # Configures the cluster's name.\n    # Provides cluster specific network configuration options.\n    network:\n        dnsDomain: cluster.local # The domain used by Kubernetes DNS.\n        # The pod subnet CIDR.\n        podSubnets:\n            - 10.244.0.0/16\n        # The service subnet CIDR.\n        serviceSubnets:\n            - 10.96.0.0/12\n        \n        # # The CNI used.\n        # cni:\n        #     name: custom # Name of CNI to use.\n        #     # URLs containing manifests to apply for the CNI.\n        #     urls:\n        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml\n    token: h33ck2.fl343gpvlphf3pwq # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.\n    secretboxEncryptionSecret: ti2e9lNgZRvcj5i7ffSJsqZVz+ukDtDzLrIUIZvoHiU= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n    # The base64 encoded root certificate authority used by Kubernetes.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRYkVGeUhadlBsalp6bmlZV1BnODRiVEFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSTFNRGN5T1RBek1EVXlNRm9YRFRNMU1EY3lOekF6TURVeQpNRm93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCQlF2T2Z4YkVhREQ5UExQY0U3TlRtNVZCSUVmb2ZBUURmcjVpK3BjdzZCdUZGaXVMaG1WRkFuZ3lHN28KS0ZuTFEyUGpmSTZBRXo0ZnM1RDZpeXhFR2Q2allUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVVNL2k1b0hudDA5Um9CaWNaRGhuaWVMOExiOFl3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnU1owN2FkMEIKVFR3b05HekZmYVVOQXJBU1VCUnEvbUxsK04vblZGZHJWYUVDSVFDTTNxd3FheVk5SVBCQnl1cy9CUFhZNFZqTgpKWHNoenNkbHBJOFVZWGgzQ2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZBSjg5M21sblpCVjdxVXFtbElrMjZwMC9RRUo4S09DRUl5d016SEtaVHJvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFRkM4NS9Gc1JvTVAwOHM5d1RzMU9ibFVFZ1IraDhCQU4rdm1MNmx6RG9HNFVXSzR1R1pVVQpDZURJYnVnb1djdERZK044am9BVFBoK3prUHFMTEVRWjNnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.\n    aggregatorCA:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFhZ0F3SUJBZ0lSQU1ZMGRDa2pGR2EyTmNoN21hcEhpYUl3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU5UQTNNamt3TXpBMU1qQmFGdzB6TlRBM01qY3dNekExTWpCYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVFrNmhZa3lXQWlXN1oreTBBYTlMTE1tQ2NKbzF0YVJWN3Fta0dxdHg4bG9ZcVovTTEwClV1akRxTzdZdFgwcWVXdnNkOG0rSmdYdWc5MHh0b2d6UFZ3R28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGR1JUcmJDL0F5N2hWT0oxM29XMGloYnJrVkZ4TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklCUnRveU1DVllCbmJra1ZXTnNIdjhtdkNMSUZJZFJjWDhYV25EVWt2SFpPQWlFQTQrRTJhcHFFcytRRGFrQkkKQlZHQS9vYzFKczNtWGl6bnd6VDdPS0c4VjBJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUY2bUhNb00rZ1h3OUFHeE9vZ0FxMzgxRUtwY1ltSUJXWU0yc2p6ZDhORlNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFSk9vV0pNbGdJbHUyZnN0QUd2U3l6SmduQ2FOYldrVmU2cHBCcXJjZkphR0ttZnpOZEZMbwp3Nmp1MkxWOUtubHI3SGZKdmlZRjdvUGRNYmFJTXoxY0JnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded private key for service account token generation.\n    serviceAccount:\n        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBeVdHZ1pibGNYcDdkSEd0cDh1aTRBRVYrUXk3L2hETWJ0cjFHMUdtZFpjMmg4Y2xCCmd4dnNKcWg1K2pBVTZXRVljZXZGaFVyMkl0bjJ6YUZBRjZnMzh1b0o3TzVGNFdCQ3dIWUFxd2JrbVk3TUV2RzcKOGZTbEhkU2I5b0dmb1J3ZmRKc0xHMURTOVJPL1VJNGtqT3YyYnFjOHFSMmJsczJNUStMUFErM1pkK2YxUzZudApBbm9hVXp2QkpJNHNaR3dGYk9QbGlSQUZsOGpOUG1UR004S3NPMVc3WGtvMGRxSWR2Yk55ampmbWg2TXZCTWJjCnA0TXQwRFluSGt6a3RUMVJ3WnFMVGZwUkpFOThxZUhOdEtjd1FpRHA5Y0FQNTYzR0pFTURlSGZVQTdod3NWTFoKNUxYM3R6dVJxVDBrNzk4bzZmV2VqazQvQTNjbW1FQ2JNM0VPU2RIbzA3cVd2L09oRXBCNWlYblArQnBoRW0yTgpaT0s4WmM4a04vYnZRczg1WEkrRTRMQWErN1FraVlBcDN0L2VYVC9KSE1VVit3SmtubGdVQjJMWDBqd21ZZ2FiCjVmQmhLOTEzVG5CNGdJay9MbUNhY0EwenFYUEQ3V1AvMis1Q0wrSGNqSVcvd2MxVFFUZmx2TmYvSFZjN0R1S0cKemJFNUtyRWRnVDVZeTBUdjlhbWdTZjIrcmZGRHA2Umk0dDloSW16OGw2SzVGMWFwNEVRenJJN24ySklUWURkKwpKTGlIVlNvU3ZVV3F2RkFLQ2FMeWU2dTRSWEY5T3EvN2ZwM3Y4cTR3T3pmck02emNyZkhsNUE3T2c0ckpyN3NCCnZSQS9PVDNwWDBwY0FQblVxeGF1dGtiZlpac1Y0VXpBbDlVSFNUeTZKMGQ3Z3pEd25NZm9KOGxpNjQ4Q0F3RUEKQVFLQ0FnQWV1Mk5RVFhxbk1KOUFXRjY4SkgrbFZhQkYweHBJcThsWVF6Slg5WFlydEdIandDUXdtZkR1bXE5aQpzRFpyYklIZjFoYzM3RG43djVUeEh6YVBaYXN1eXVzN2c4YVk5UDVsZzBjKzBtSjRmSzVGV3l2NkZLejR0eHJHCkFsVEFzQnRYZEN4bkVzS0pocnRLS1NjSUg4cGxGZWg2b1NZVUJzZVh1ZVBmZmZZVFhRd0xhL2N3eXVsOE41WkEKdWVHcHdaZTNzbCt6dHdUamU2VmhiREpERytaUGQ4U01TSGxtZS84RjZ0Tlo3aUNrSlJHNzE0MDg2R3YwRVErUApORFRZT1JvTTdab1hZRktacy9lcnIrWHdqUmgwUHdtZjZKdUV3NlF2OXlURWNhVDM4YmNMbUpVMVdLcGhCVytKCk5aSTVlUU9KWmc1akJvQ0o5WU9ub0g4TzJWQ2w5WS9acmcvY1ZEbHp5UmphMzhYeVRIWmR1YUROb3RkNFBQMjYKSk1UUWJGalVpYTdEZzJqYzAzY3BxM3RxVi9ObGZxb1JpcXRyaC9KdkNpM3dJbWpBS1Q3azdsZ3JKMG9qYi8rZwpBNGhTQTdYOFFySnlUSzZHalpCN0Rmajl4ek1TU0xLTTUzY0VUMWExUUExSmx0TjZxT2RZY1NPajVOMlc1blhBCmpCbHBWd2lCNVNGQ2lHUEZxc2dzK3AvTEp5ZE5kTFgwZnR3M3JwMmFCaDVMTWl6blhsczREUk9pR3l4SkY2OWoKOFpxSlQ0RmQvZllWYjRFQkxHYlhPTTVqTGNZK2RDZ0U1b2J5bVZhMndjWnBXSzRDdHZObURkUjQ3R0ZScVF4MgpBeUpuTzFXU1dRZ083VXNuSCtmUk1TZ3BWS3FUSG1JMnpYRzRNMVlIRUh0NjljazVBUUtDQVFFQS92S3hIaWdSCnoxa3g4NkpoYklnaVc4SC9semZaRExXYzhiaHc1OGxzNWdkNC8xNHNxM3N5OEpiR1hpT0lTdGdmcWo4YW12QnIKMzdLQzZFY2duZ0NGQjdBTTBQejlPZUdBYmo2ZTBuVi9FcW5UaXlnT1IxTEsvVUpWcVZTd1hKNk5mdGVyWSt4awpLWWxSOEhKdng2MDVQYmgwSDdlcHAyeC9pQm1XbUkwb0FDQjZhb2drWE9IeTd6alZ6N0dkcFlCWmN2VXV3blpyCnkyZ050TzhKc0U3WExvdS9DZHZETmMvRTVYd1JkV3I1L2JwVENMWnZZWDZHTnhPNjJxdXY4QTVOazZ1ZVUxVEoKUk1ncUtKQmIyK2hVb1dvNEwyQWIrZEo0WUV0R3NSMFdDVVpEdmtFU1JmZ2xLODZabHdaYnB4K2U2ZDNDTHR0QQpCQVFkTndXbGNENlZyd0tDQVFFQXlqWlowUTI2T0p3czIvOFdmbHpGWjAyTlhCYWhzQU5LL0haRytteVdrb0tECk9MSnVFUkpRZkZQSVVpL1RnbnRtM0lFRy9mV2V2Nk5KZnJDTXFQZ2l6TTJjMlNOQm1SMXBUbkthSy9xYXhOYzUKWHI3dy8ra0xuTzBEcGx4ZmlzcXNmcTBYNUREckpVeHRsbHdFYjA2Y1dlVGNhWTl1RmJUakJ4dlZCK1pTNGxYMQpqbVdwZm05Lzk5TWdxamRyVnp2MktiQVR6bVNRS3g0YmdBRWhSVUVuRFVFWGtEMk5INlh5UUo0RXNZbTF0YnB1CkJ4cDdFTUl0TUhJMk9md09RY3NVZVAzUHJmeEM0TXRPWE1aUTVqcHR0OVVEMFVIMnpCcHFxZjZpNWhmWkZIa3EKcW9QQjFPUm9ocVpNK1pNeVFzS1NwZHkwc1htNUdQZyswK0g2TmRCZ0lRS0NBUUVBd3VaYm10YzlEa3Q4MFdrZwptMnpTLzF5bWZUNzNraXpBeDFXZUVzUThtUG03ZVZYUVJtUFBoSGR2UElaamFmd2c4UEIrOFZXODBlMVJBQ3RuCjl3SWtzTVRZZDJnQVdpQlhJM0NCMEJoOHhaTElvc2hEYWlrVC8xcVh5L1J2UXM3L0VxbmpYMmRYQngzd1l5WEkKNkZnM3UwUm9tZHE1T3NIS0dReWV3UTZnTnNDZGRSV1EzdVRvNkJLRitkb3B6MXo0aE5hRklhcVFLNWJuYTV1Vgp4NC91RnFwRXFFKzF3MHlMbEhndGpKcjBkQkRkNjNvMFdjNzA0ZVFXWTViKzBFRE84NFl1YWp3V0Jad1VCcUNkCmFOY0s0NzhsSnFxTm1JVmEreHB3OTNOcDVqc3VES01JU2k4eWszUEVuTjBDY2hmTlQ3SDFBZ2Nnd0RFNCtGZzcKcWp4ZUJ3S0NBUUFIRis4QXFXV2Q5TVNTRnhtMzV4TTVzM3ZBL2o0L3lXM0krM0V6K2JreWZJZVQ1cFo3M05PYgorT2h2RWFSdTBGdGtZdFpXOUZYVVRTc1gyYU9samNiU3ZtZkJLajV6MjVkRkhEb1NUdUU5Qkh2THVoRUVPUzJpCkhLSmpKSnhwWndDMEZPaGdwZUtwMVV1RzJjV0NEaFRvQm1KQkJib0w0dU9QN1VjRTF1eVRhZ2FLTDBESjRhbHcKalNSNU5DWjgwZXFwdmJhRUovenl0a1Nxc2Q5ejZYd3dOOWRXeFFIOVdUbnRVRjNEeUp2cU94Yi9Bc3ZNWTdObwpIcW1PVVN4QzNKZmtRcXNWWkdNSU5ibVRBWlgyN1pmSnVody9LL3czWHJuZEtzU1dJOElHdU5WcFUrUHB6dlZuCnU4KzVkWk51eWhxUTNQUXR3YUpmb04yN1d4TUc3ajloQW9JQkFRQ0xRSkV1SVBLTzdRYkJBMU5BYlFwVkM2ZnQKTWJkQXVYYVAyTUU4cXBKOWdMYXZRdEViVlpVbXdrMktqMktxMFp3TTBaU3EvdWJYUU8xWGNJMjVhUG1abGZ3RQp5MTdzY0hvWjFaMC9iMmxTMHE4WXJ5YmJqZkptMjhEMGtXOE92djNheFlKbUh3U3laS3R6cmkzUkhhNENjK1JiCkFlcWdRZy9KWnhuTStCRU9Fb0hnak9lYWFZR2FpZXdsdmZWR0dTOS9TalM2TDNaNnVQaEdnanZMVm14MDdhUE4KRzU1WEFWZ1V2MGtaQWZPOEY0S2tGLzM2TmpabWpYMUVjK0FPZFR5UDh3N0VjY0dzaCtpU1pySm85ejJMREJNUwpocG80WWRmdnM3dzk5eUtkTWJhOTdNRkMwV244RFZaT1ZrckV0V0ZDUFYvK2xZVTBtMVdsdUpmVWw5cXYKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K\n    # API server specific configuration options.\n    apiServer:\n        image: registry.k8s.io/kube-apiserver:v1.33.2 # The container image used in the API server manifest.\n        # Extra certificate subject alternative names for the API server's certificate.\n        certSANs:\n            - 10.5.0.2\n            - 127.0.0.1\n        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.\n        # Configure the API server admission plugins.\n        admissionControl:\n            - name: PodSecurity # Name is the name of the admission controller.\n              # Configuration is an embedded configuration object to be used as the plugin's\n              configuration:\n                apiVersion: pod-security.admission.config.k8s.io/v1alpha1\n                defaults:\n                    audit: restricted\n                    audit-version: latest\n                    enforce: baseline\n                    enforce-version: latest\n                    warn: restricted\n                    warn-version: latest\n                exemptions:\n                    namespaces:\n                        - kube-system\n                    runtimeClasses: []\n                    usernames: []\n                kind: PodSecurityConfiguration\n        # Configure the API server audit policy.\n        auditPolicy:\n            apiVersion: audit.k8s.io/v1\n            kind: Policy\n            rules:\n                - level: Metadata\n        \n        # # Configure the API server authorization config. Node and RBAC authorizers are always added irrespective of the configuration.\n        # authorizationConfig:\n        #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.\n        #       name: webhook # Name is used to describe the authorizer.\n        #       # webhook is the configuration for the webhook authorizer.\n        #       webhook:\n        #         connectionInfo:\n        #             type: InClusterConfig\n        #         failurePolicy: Deny\n        #         matchConditionSubjectAccessReviewVersion: v1\n        #         matchConditions:\n        #             - expression: has(request.resourceAttributes)\n        #             - expression: '!(\\''system:serviceaccounts:kube-system\\'' in request.groups)'\n        #         subjectAccessReviewVersion: v1\n        #         timeout: 3s\n        #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.\n        #       name: in-cluster-authorizer # Name is used to describe the authorizer.\n        #       # webhook is the configuration for the webhook authorizer.\n        #       webhook:\n        #         connectionInfo:\n        #             type: InClusterConfig\n        #         failurePolicy: NoOpinion\n        #         matchConditionSubjectAccessReviewVersion: v1\n        #         subjectAccessReviewVersion: v1\n        #         timeout: 3s\n    # Controller manager server specific configuration options.\n    controllerManager:\n        image: registry.k8s.io/kube-controller-manager:v1.33.2 # The container image used in the controller manager manifest.\n    # Kube-proxy server-specific configuration options\n    proxy:\n        image: registry.k8s.io/kube-proxy:v1.33.2 # The container image used in the kube-proxy manifest.\n        \n        # # Disable kube-proxy deployment on cluster bootstrap.\n        # disabled: false\n    # Scheduler server specific configuration options.\n    scheduler:\n        image: registry.k8s.io/kube-scheduler:v1.33.2 # The container image used in the scheduler manifest.\n    # Configures cluster member discovery.\n    discovery:\n        enabled: true # Enable the cluster membership discovery feature.\n        # Configure registries used for cluster member discovery.\n        registries:\n            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information\n            kubernetes:\n                disabled: true # Disable Kubernetes discovery registry.\n            # Service registry is using an external service to push and pull information about cluster members.\n            service: {}\n            # # External service endpoint.\n            # endpoint: https://discovery.talos.dev/\n    # Etcd specific configuration options.\n    etcd:\n        # The `ca` is the root certificate authority of the PKI.\n        ca:\n            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNPZ0F3SUJBZ0lRTjJINkc4NHBuQXFjb0hrS09odzhOakFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEkxTURjeU9UQXpNRFV5TUZvWERUTTFNRGN5TnpBek1EVXlNRm93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkN6ZzRVK0xScVoyClEyZU1oSTVmTTBwOVdKUjhVTU5BQTRBQVY1bUNEOEQvaDVCNG5wR1dkU3BWSktNQ2JFb2VlbGc3bEVwbDI0SkYKV2s4QWtEL1NGSzJqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVSEI0VjdEWE52TEw1ClFkeXBzelZ2eFFoN3M2RXdDZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUHdHbzlVYWNZOGRsWC9KRHI0ZGVvWisKSjE1M0piZlR4UXZDU2x4TnY3RWFBaUVBcm9GdEZkdUkzQzRSYkVPNmNMVnpSSGp3NjdqcGdvTFdFNTdlNzhDUApmMlU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSVBRWTZra1orM2pZd1REWHlRQ0xzRk1HM1g1Q1h2YWlEVnlmcHNyQU9NTVdvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFTE9EaFQ0dEdwblpEWjR5RWpsOHpTbjFZbEh4UXcwQURnQUJYbVlJUHdQK0hrSGlla1paMQpLbFVrb3dKc1NoNTZXRHVVU21YYmdrVmFUd0NRUDlJVXJRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n        \n        # # The container image used to create the etcd service.\n        # image: gcr.io/etcd-development/etcd:v3.5.21\n\n        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.\n        # advertisedSubnets:\n        #     - 10.0.0.0/8\n    # A list of urls that point to additional manifests.\n    extraManifests: []\n    #   - https://www.example.com/manifest1.yaml\n    #   - https://www.example.com/manifest2.yaml\n\n    # A list of inline Kubernetes manifests.\n    inlineManifests: []\n    #   - name: namespace-ci # Name of the manifest.\n    #     contents: |- # Manifest contents as a string.\n    #       apiVersion: v1\n    #       kind: Namespace\n    #       metadata:\n    #       \tname: ci\n\n    \n    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n\n    # # Decryption secret example (do not use in production!).\n    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=\n\n    # # Core DNS specific configuration options.\n    # coreDNS:\n    #     image: registry.k8s.io/coredns/coredns:v1.12.1 # The `image` field is an override to the default coredns image.\n\n    # # External cloud provider configuration.\n    # externalCloudProvider:\n    #     enabled: true # Enable external cloud provider.\n    #     # A list of urls that point to additional manifests for an external cloud provider.\n    #     manifests:\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml\n\n    # # A map of key value pairs that will be added while fetching the extraManifests.\n    # extraManifestHeaders:\n    #     Token: \"1234567\"\n    #     X-ExtraInfo: info\n\n    # # Settings for admin kubeconfig generation.\n    # adminKubeconfig:\n    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).\n\n    # # Allows running workload on control-plane nodes.\n    # allowSchedulingOnControlPlanes: true\n"
---
node: 127.0.0.1
metadata:
    namespace: config
    type: MachineConfigs.config.talos.dev
    id: v1alpha1
    version: 1
    owner:
    phase: running
    created: 2025-07-29T03:05:24Z
    updated: 2025-07-29T03:05:24Z
spec: "version: v1alpha1 # Indicates the schema used to decode the contents.\ndebug: false # Enable verbose logging to the console.\npersist: true\n# Provides machine specific configuration options.\nmachine:\n    type: controlplane # Defines the role of the machine within the cluster.\n    token: h8kb0d.8wqv5iayexy12vh1 # The `token` is used by a machine to join the PKI of the cluster.\n    # The root certificate authority of the PKI.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQekNCOHFBREFnRUNBaEVBK0N5THpiMkpXVHlxc1dSRHkvbXMzekFGQmdNclpYQXdFREVPTUF3R0ExVUUKQ2hNRmRHRnNiM013SGhjTk1qVXdOekk1TURNd05USXdXaGNOTXpVd056STNNRE13TlRJd1dqQVFNUTR3REFZRApWUVFLRXdWMFlXeHZjekFxTUFVR0F5dGxjQU1oQUw1VlF1Q3ltdC80QklaRXc5d29BcU9MUEFlNGtCL2M2MlJQCkNNM3ZvUEdLbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQW9Rd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkx6b0ZJS1ZUckZkOExnNgp4aGNYREVkVG9BMXdNQVVHQXl0bGNBTkJBQzJnSGRmenRETmljbjN5TFh4VkpmcUlVandRS2Q0Tm1kdGNqZEpRCmMvK0hBbTNCZTFvUlluVFpZOGdoNnVFS3lxNFdYNlpiR0dWSFpPTmJBcWlDNVFRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJS1owVGxpTnhVY2Rrb1VsK3BBcmVjUGphOVNrTllHRzc1ZlpUODE5TnB3MQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K\n    # Extra certificate subject alternative names for the machine's certificate.\n    certSANs:\n        - 127.0.0.1\n    # Used to provide additional options to the kubelet.\n    kubelet:\n        image: ghcr.io/siderolabs/kubelet:v1.33.2 # The `image` field is an optional reference to an alternative kubelet image.\n        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.\n        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.\n        \n        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.\n        # clusterDNS:\n        #     - 10.96.0.10\n        #     - 169.254.2.53\n\n        # # The `extraArgs` field is used to provide additional flags to the kubelet.\n        # extraArgs:\n        #     key: value\n\n        # # The `extraMounts` field is used to add additional mounts to the kubelet container.\n        # extraMounts:\n        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.\n        #       type: bind # Type specifies the mount kind.\n        #       source: /var/lib/example # Source specifies the source path of the mount.\n        #       # Options are fstab style mount options.\n        #       options:\n        #         - bind\n        #         - rshared\n        #         - rw\n\n        # # The `extraConfig` field is used to provide kubelet configuration overrides.\n        # extraConfig:\n        #     serverTLSBootstrap: true\n\n        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.\n        # credentialProviderConfig:\n        #     apiVersion: kubelet.config.k8s.io/v1\n        #     kind: CredentialProviderConfig\n        #     providers:\n        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1\n        #           defaultCacheDuration: 12h\n        #           matchImages:\n        #             - '*.dkr.ecr.*.amazonaws.com'\n        #             - '*.dkr.ecr.*.amazonaws.com.cn'\n        #             - '*.dkr.ecr-fips.*.amazonaws.com'\n        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'\n        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'\n        #           name: ecr-credential-provider\n\n        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.\n        # nodeIP:\n        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.\n        #     validSubnets:\n        #         - 10.0.0.0/8\n        #         - '!10.0.0.3/32'\n        #         - fdc7::/16\n    # Provides machine specific network configuration options.\n    network:\n        # `interfaces` is used to define the network interface configuration.\n        interfaces:\n            - interface: eth0 # The interface name.\n              ignore: true # Indicates if the interface should be ignored (skips configuration).\n              \n              # # Picks a network device using the selector.\n\n              # # select a device with bus prefix 00:*.\n              # deviceSelector:\n              #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n              # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n              # deviceSelector:\n              #     hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.\n              #     driver: virtio_net # Kernel driver, supports matching by wildcard.\n              # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.\n              # deviceSelector:\n              #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n              #     - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.\n              #       driver: virtio_net # Kernel driver, supports matching by wildcard.\n\n              # # Assigns static IP addresses to the interface.\n              # addresses:\n              #     - 10.5.0.0/16\n              #     - 192.168.3.7\n\n              # # A list of routes associated with the interface.\n              # routes:\n              #     - network: 0.0.0.0/0 # The route's network (destination).\n              #       gateway: 10.5.0.1 # The route's gateway (if empty, creates link scope route).\n              #     - network: 10.2.0.0/16 # The route's network (destination).\n              #       gateway: 10.2.0.1 # The route's gateway (if empty, creates link scope route).\n\n              # # Bond specific options.\n              # bond:\n              #     # The interfaces that make up the bond.\n              #     interfaces:\n              #         - enp2s0\n              #         - enp2s1\n              #     # Picks a network device using the selector.\n              #     deviceSelectors:\n              #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.\n              #         - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.\n              #           driver: virtio_net # Kernel driver, supports matching by wildcard.\n              #     mode: 802.3ad # A bond option.\n              #     lacpRate: fast # A bond option.\n\n              # # Bridge specific options.\n              # bridge:\n              #     # The interfaces that make up the bridge.\n              #     interfaces:\n              #         - enxda4042ca9a51\n              #         - enxae2a6774c259\n              #     # Enable STP on this bridge.\n              #     stp:\n              #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.\n\n              # # Configure this device as a bridge port.\n              # bridgePort:\n              #     master: br0 # The name of the bridge master interface\n\n              # # Indicates if DHCP should be used to configure the interface.\n              # dhcp: true\n\n              # # DHCP specific options.\n              # dhcpOptions:\n              #     routeMetric: 1024 # The priority of all routes received via DHCP.\n\n              # # Wireguard specific configuration.\n\n              # # wireguard server example\n              # wireguard:\n              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n              #     listenPort: 51111 # Specifies a device's listening port.\n              #     # Specifies a list of peer configurations to apply to a device.\n              #     peers:\n              #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n              #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.\n              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n              #           allowedIPs:\n              #             - 192.168.1.0/24\n              # # wireguard peer example\n              # wireguard:\n              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).\n              #     # Specifies a list of peer configurations to apply to a device.\n              #     peers:\n              #         - publicKey: ABCDEF... # Specifies the public key of this peer.\n              #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.\n              #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.\n              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.\n              #           allowedIPs:\n              #             - 192.168.1.0/24\n\n              # # Virtual (shared) IP address configuration.\n\n              # # layer2 vip example\n              # vip:\n              #     ip: 172.16.199.55 # Specifies the IP address to be used.\n        \n        # # Used to statically set the nameservers for the machine.\n        # nameservers:\n        #     - 8.8.8.8\n        #     - 1.1.1.1\n\n        # # Used to statically set arbitrary search domains.\n        # searchDomains:\n        #     - example.org\n        #     - example.com\n\n        # # Allows for extra entries to be added to the `/etc/hosts` file\n        # extraHostEntries:\n        #     - ip: 192.168.1.100 # The IP of the host.\n        #       # The host alias.\n        #       aliases:\n        #         - example\n        #         - example.domain.tld\n\n        # # Configures KubeSpan feature.\n        # kubespan:\n        #     enabled: true # Enable the KubeSpan feature.\n    # Used to provide instructions for installations.\n    install:\n        image: ghcr.io/siderolabs/installer:v1.10.5 # Allows for supplying the image used to perform the installation.\n        wipe: false # Indicates if the installation disk should be wiped at installation time.\n        \n        # # The disk used for installations.\n        # disk: /dev/sda\n        # disk: /dev/nvme0\n\n        # # Look up disk using disk attributes like model, size, serial and others.\n        # diskSelector:\n        #     size: 4GB # Disk size.\n        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.\n        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.\n\n        # # Allows for supplying extra kernel args via the bootloader.\n        # extraKernelArgs:\n        #     - talos.platform=metal\n        #     - reboot=k\n    # Used to configure the machine's container image registry mirrors.\n    registries: {}\n    # # Specifies mirror configuration for each registry host namespace.\n    # mirrors:\n    #     ghcr.io:\n    #         # List of endpoints (URLs) for registry mirrors to use.\n    #         endpoints:\n    #             - https://registry.insecure\n    #             - https://ghcr.io/v2/\n\n    # # Specifies TLS & auth configuration for HTTPS image registries.\n    # config:\n    #     registry.insecure:\n    #         # The TLS configuration for the registry.\n    #         tls:\n    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).\n    #             \n    #             # # Enable mutual TLS authentication with the registry.\n    #             # clientIdentity:\n    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t\n    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==\n    #         \n    #         # # The auth configuration for this registry.\n    #         # auth:\n    #         #     username: username # Optional registry authentication.\n    #         #     password: password # Optional registry authentication.\n\n    # Features describe individual Talos features that can be switched on or off.\n    features:\n        rbac: true # Enable role-based access control (RBAC).\n        stableHostname: true # Enable stable default hostname.\n        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.\n        diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.\n        # KubePrism - local proxy/load balancer on defined port that will distribute\n        kubePrism:\n            enabled: true # Enable KubePrism support - will start local load balancing proxy.\n            port: 7445 # KubePrism port.\n        # Configures host DNS caching resolver.\n        hostDNS:\n            enabled: true # Enable host DNS caching resolver.\n            forwardKubeDNSToHost: true # Use the host DNS resolver as upstream for Kubernetes CoreDNS pods.\n        \n        # # Configure Talos API access from Kubernetes pods.\n        # kubernetesTalosAPIAccess:\n        #     enabled: true # Enable Talos API access from Kubernetes pods.\n        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.\n        #     allowedRoles:\n        #         - os:reader\n        #     # The list of Kubernetes namespaces Talos API access is available from.\n        #     allowedKubernetesNamespaces:\n        #         - kube-system\n    # Configures the node labels for the machine.\n    nodeLabels:\n        node.kubernetes.io/exclude-from-external-load-balancers: \"\"\n    \n    # # Provides machine specific control plane configuration options.\n\n    # # ControlPlane definition example.\n    # controlPlane:\n    #     # Controller manager machine specific configuration options.\n    #     controllerManager:\n    #         disabled: false # Disable kube-controller-manager on the node.\n    #     # Scheduler machine specific configuration options.\n    #     scheduler:\n    #         disabled: true # Disable kube-scheduler on the node.\n\n    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.\n\n    # # nginx static pod.\n    # pods:\n    #     - apiVersion: v1\n    #       kind: pod\n    #       metadata:\n    #         name: nginx\n    #       spec:\n    #         containers:\n    #             - image: nginx\n    #               name: nginx\n\n    # # Allows the addition of user specified files.\n\n    # # MachineFiles usage example.\n    # files:\n    #     - content: '...' # The contents of the file.\n    #       permissions: 0o666 # The file's permissions in octal.\n    #       path: /tmp/file.txt # The path of the file.\n    #       op: append # The operation to use\n\n    # # The `env` field allows for the addition of environment variables.\n\n    # # Environment variables definition examples.\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: info\n    #     GRPC_GO_LOG_VERBOSITY_LEVEL: \"99\"\n    #     https_proxy: http://SERVER:PORT/\n    # env:\n    #     GRPC_GO_LOG_SEVERITY_LEVEL: error\n    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/\n    # env:\n    #     https_proxy: http://DOMAIN\\USERNAME:PASSWORD@SERVER:PORT/\n\n    # # Used to configure the machine's time settings.\n\n    # # Example configuration for cloudflare ntp server.\n    # time:\n    #     disabled: false # Indicates if the time service is disabled for the machine.\n    #     # description: |\n    #     servers:\n    #         - time.cloudflare.com\n    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.\n\n    # # Used to configure the machine's sysctls.\n\n    # # MachineSysctls usage example.\n    # sysctls:\n    #     kernel.domainname: talos.dev\n    #     net.ipv4.ip_forward: \"0\"\n    #     net/ipv6/conf/eth0.100/disable_ipv6: \"1\"\n\n    # # Used to configure the machine's sysfs.\n\n    # # MachineSysfs usage example.\n    # sysfs:\n    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance\n\n    # # Machine system disk encryption configuration.\n    # systemDiskEncryption:\n    #     # Ephemeral partition encryption.\n    #     ephemeral:\n    #         provider: luks2 # Encryption provider to use for the encryption.\n    #         # Defines the encryption keys generation and storage method.\n    #         keys:\n    #             - # Deterministically generated key from the node UUID and PartitionLabel.\n    #               nodeID: {}\n    #               slot: 0 # Key slot number for LUKS2 encryption.\n    #               \n    #               # # KMS managed encryption key.\n    #               # kms:\n    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.\n    #         \n    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.\n    #         # cipher: aes-xts-plain64\n\n    #         # # Defines the encryption sector size.\n    #         # blockSize: 4096\n\n    #         # # Additional --perf parameters for the LUKS2 encryption.\n    #         # options:\n    #         #     - no_read_workqueue\n    #         #     - no_write_workqueue\n\n    # # Configures the udev system.\n    # udev:\n    #     # List of udev rules to apply to the udev system\n    #     rules:\n    #         - SUBSYSTEM==\"drm\", KERNEL==\"renderD*\", GROUP=\"44\", MODE=\"0660\"\n\n    # # Configures the logging system.\n    # logging:\n    #     # Logging destination.\n    #     destinations:\n    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are \"tcp\" and \"udp\".\n    #           format: json_lines # Logs format.\n\n    # # Configures the kernel.\n    # kernel:\n    #     # Kernel modules to load.\n    #     modules:\n    #         - name: brtfs # Module name.\n\n    # # Configures the seccomp profiles for the machine.\n    # seccompProfiles:\n    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.\n    #       # The `value` field is used to provide the seccomp profile.\n    #       value:\n    #         defaultAction: SCMP_ACT_LOG\n\n    # # Override (patch) settings in the default OCI runtime spec for CRI containers.\n\n    # # override default open file limit\n    # baseRuntimeSpecOverrides:\n    #     process:\n    #         rlimits:\n    #             - hard: 1024\n    #               soft: 1024\n    #               type: RLIMIT_NOFILE\n\n    # # Configures the node annotations for the machine.\n\n    # # node annotations example.\n    # nodeAnnotations:\n    #     customer.io/rack: r13a25\n\n    # # Configures the node taints for the machine. Effect is optional.\n\n    # # node taints example.\n    # nodeTaints:\n    #     exampleTaint: exampleTaintValue:NoSchedule\n# Provides cluster specific configuration options.\ncluster:\n    id: BTHX8RoG6ItO7mbyXg9lj7R2fl6t4aFXodsj5VtI-Qg= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).\n    secret: 9wvUjYP6ml8fGLHH5O98mMoTSKyIhKyTDbuFaD4cesk= # Shared secret of cluster (base64 encoded random 32 bytes).\n    # Provides control plane specific configuration options.\n    controlPlane:\n        endpoint: https://10.5.0.2:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.\n    clusterName: istio # Configures the cluster's name.\n    # Provides cluster specific network configuration options.\n    network:\n        dnsDomain: cluster.local # The domain used by Kubernetes DNS.\n        # The pod subnet CIDR.\n        podSubnets:\n            - 10.244.0.0/16\n        # The service subnet CIDR.\n        serviceSubnets:\n            - 10.96.0.0/12\n        \n        # # The CNI used.\n        # cni:\n        #     name: custom # Name of CNI to use.\n        #     # URLs containing manifests to apply for the CNI.\n        #     urls:\n        #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml\n    token: h33ck2.fl343gpvlphf3pwq # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.\n    secretboxEncryptionSecret: ti2e9lNgZRvcj5i7ffSJsqZVz+ukDtDzLrIUIZvoHiU= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n    # The base64 encoded root certificate authority used by Kubernetes.\n    ca:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVMrZ0F3SUJBZ0lRYkVGeUhadlBsalp6bmlZV1BnODRiVEFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSTFNRGN5T1RBek1EVXlNRm9YRFRNMU1EY3lOekF6TURVeQpNRm93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCQlF2T2Z4YkVhREQ5UExQY0U3TlRtNVZCSUVmb2ZBUURmcjVpK3BjdzZCdUZGaXVMaG1WRkFuZ3lHN28KS0ZuTFEyUGpmSTZBRXo0ZnM1RDZpeXhFR2Q2allUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVVNL2k1b0hudDA5Um9CaWNaRGhuaWVMOExiOFl3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnU1owN2FkMEIKVFR3b05HekZmYVVOQXJBU1VCUnEvbUxsK04vblZGZHJWYUVDSVFDTTNxd3FheVk5SVBCQnl1cy9CUFhZNFZqTgpKWHNoenNkbHBJOFVZWGgzQ2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZBSjg5M21sblpCVjdxVXFtbElrMjZwMC9RRUo4S09DRUl5d016SEtaVHJvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFRkM4NS9Gc1JvTVAwOHM5d1RzMU9ibFVFZ1IraDhCQU4rdm1MNmx6RG9HNFVXSzR1R1pVVQpDZURJYnVnb1djdERZK044am9BVFBoK3prUHFMTEVRWjNnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.\n    aggregatorCA:\n        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFhZ0F3SUJBZ0lSQU1ZMGRDa2pGR2EyTmNoN21hcEhpYUl3Q2dZSUtvWkl6ajBFQXdJd0FEQWUKRncweU5UQTNNamt3TXpBMU1qQmFGdzB6TlRBM01qY3dNekExTWpCYU1BQXdXVEFUQmdjcWhrak9QUUlCQmdncQpoa2pPUFFNQkJ3TkNBQVFrNmhZa3lXQWlXN1oreTBBYTlMTE1tQ2NKbzF0YVJWN3Fta0dxdHg4bG9ZcVovTTEwClV1akRxTzdZdFgwcWVXdnNkOG0rSmdYdWc5MHh0b2d6UFZ3R28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXcKSFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpIUVlEVlIwT0JCWUVGR1JUcmJDL0F5N2hWT0oxM29XMGloYnJrVkZ4TUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDCklCUnRveU1DVllCbmJra1ZXTnNIdjhtdkNMSUZJZFJjWDhYV25EVWt2SFpPQWlFQTQrRTJhcHFFcytRRGFrQkkKQlZHQS9vYzFKczNtWGl6bnd6VDdPS0c4VjBJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUY2bUhNb00rZ1h3OUFHeE9vZ0FxMzgxRUtwY1ltSUJXWU0yc2p6ZDhORlNvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFSk9vV0pNbGdJbHUyZnN0QUd2U3l6SmduQ2FOYldrVmU2cHBCcXJjZkphR0ttZnpOZEZMbwp3Nmp1MkxWOUtubHI3SGZKdmlZRjdvUGRNYmFJTXoxY0JnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n    # The base64 encoded private key for service account token generation.\n    serviceAccount:\n        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBeVdHZ1pibGNYcDdkSEd0cDh1aTRBRVYrUXk3L2hETWJ0cjFHMUdtZFpjMmg4Y2xCCmd4dnNKcWg1K2pBVTZXRVljZXZGaFVyMkl0bjJ6YUZBRjZnMzh1b0o3TzVGNFdCQ3dIWUFxd2JrbVk3TUV2RzcKOGZTbEhkU2I5b0dmb1J3ZmRKc0xHMURTOVJPL1VJNGtqT3YyYnFjOHFSMmJsczJNUStMUFErM1pkK2YxUzZudApBbm9hVXp2QkpJNHNaR3dGYk9QbGlSQUZsOGpOUG1UR004S3NPMVc3WGtvMGRxSWR2Yk55ampmbWg2TXZCTWJjCnA0TXQwRFluSGt6a3RUMVJ3WnFMVGZwUkpFOThxZUhOdEtjd1FpRHA5Y0FQNTYzR0pFTURlSGZVQTdod3NWTFoKNUxYM3R6dVJxVDBrNzk4bzZmV2VqazQvQTNjbW1FQ2JNM0VPU2RIbzA3cVd2L09oRXBCNWlYblArQnBoRW0yTgpaT0s4WmM4a04vYnZRczg1WEkrRTRMQWErN1FraVlBcDN0L2VYVC9KSE1VVit3SmtubGdVQjJMWDBqd21ZZ2FiCjVmQmhLOTEzVG5CNGdJay9MbUNhY0EwenFYUEQ3V1AvMis1Q0wrSGNqSVcvd2MxVFFUZmx2TmYvSFZjN0R1S0cKemJFNUtyRWRnVDVZeTBUdjlhbWdTZjIrcmZGRHA2Umk0dDloSW16OGw2SzVGMWFwNEVRenJJN24ySklUWURkKwpKTGlIVlNvU3ZVV3F2RkFLQ2FMeWU2dTRSWEY5T3EvN2ZwM3Y4cTR3T3pmck02emNyZkhsNUE3T2c0ckpyN3NCCnZSQS9PVDNwWDBwY0FQblVxeGF1dGtiZlpac1Y0VXpBbDlVSFNUeTZKMGQ3Z3pEd25NZm9KOGxpNjQ4Q0F3RUEKQVFLQ0FnQWV1Mk5RVFhxbk1KOUFXRjY4SkgrbFZhQkYweHBJcThsWVF6Slg5WFlydEdIandDUXdtZkR1bXE5aQpzRFpyYklIZjFoYzM3RG43djVUeEh6YVBaYXN1eXVzN2c4YVk5UDVsZzBjKzBtSjRmSzVGV3l2NkZLejR0eHJHCkFsVEFzQnRYZEN4bkVzS0pocnRLS1NjSUg4cGxGZWg2b1NZVUJzZVh1ZVBmZmZZVFhRd0xhL2N3eXVsOE41WkEKdWVHcHdaZTNzbCt6dHdUamU2VmhiREpERytaUGQ4U01TSGxtZS84RjZ0Tlo3aUNrSlJHNzE0MDg2R3YwRVErUApORFRZT1JvTTdab1hZRktacy9lcnIrWHdqUmgwUHdtZjZKdUV3NlF2OXlURWNhVDM4YmNMbUpVMVdLcGhCVytKCk5aSTVlUU9KWmc1akJvQ0o5WU9ub0g4TzJWQ2w5WS9acmcvY1ZEbHp5UmphMzhYeVRIWmR1YUROb3RkNFBQMjYKSk1UUWJGalVpYTdEZzJqYzAzY3BxM3RxVi9ObGZxb1JpcXRyaC9KdkNpM3dJbWpBS1Q3azdsZ3JKMG9qYi8rZwpBNGhTQTdYOFFySnlUSzZHalpCN0Rmajl4ek1TU0xLTTUzY0VUMWExUUExSmx0TjZxT2RZY1NPajVOMlc1blhBCmpCbHBWd2lCNVNGQ2lHUEZxc2dzK3AvTEp5ZE5kTFgwZnR3M3JwMmFCaDVMTWl6blhsczREUk9pR3l4SkY2OWoKOFpxSlQ0RmQvZllWYjRFQkxHYlhPTTVqTGNZK2RDZ0U1b2J5bVZhMndjWnBXSzRDdHZObURkUjQ3R0ZScVF4MgpBeUpuTzFXU1dRZ083VXNuSCtmUk1TZ3BWS3FUSG1JMnpYRzRNMVlIRUh0NjljazVBUUtDQVFFQS92S3hIaWdSCnoxa3g4NkpoYklnaVc4SC9semZaRExXYzhiaHc1OGxzNWdkNC8xNHNxM3N5OEpiR1hpT0lTdGdmcWo4YW12QnIKMzdLQzZFY2duZ0NGQjdBTTBQejlPZUdBYmo2ZTBuVi9FcW5UaXlnT1IxTEsvVUpWcVZTd1hKNk5mdGVyWSt4awpLWWxSOEhKdng2MDVQYmgwSDdlcHAyeC9pQm1XbUkwb0FDQjZhb2drWE9IeTd6alZ6N0dkcFlCWmN2VXV3blpyCnkyZ050TzhKc0U3WExvdS9DZHZETmMvRTVYd1JkV3I1L2JwVENMWnZZWDZHTnhPNjJxdXY4QTVOazZ1ZVUxVEoKUk1ncUtKQmIyK2hVb1dvNEwyQWIrZEo0WUV0R3NSMFdDVVpEdmtFU1JmZ2xLODZabHdaYnB4K2U2ZDNDTHR0QQpCQVFkTndXbGNENlZyd0tDQVFFQXlqWlowUTI2T0p3czIvOFdmbHpGWjAyTlhCYWhzQU5LL0haRytteVdrb0tECk9MSnVFUkpRZkZQSVVpL1RnbnRtM0lFRy9mV2V2Nk5KZnJDTXFQZ2l6TTJjMlNOQm1SMXBUbkthSy9xYXhOYzUKWHI3dy8ra0xuTzBEcGx4ZmlzcXNmcTBYNUREckpVeHRsbHdFYjA2Y1dlVGNhWTl1RmJUakJ4dlZCK1pTNGxYMQpqbVdwZm05Lzk5TWdxamRyVnp2MktiQVR6bVNRS3g0YmdBRWhSVUVuRFVFWGtEMk5INlh5UUo0RXNZbTF0YnB1CkJ4cDdFTUl0TUhJMk9md09RY3NVZVAzUHJmeEM0TXRPWE1aUTVqcHR0OVVEMFVIMnpCcHFxZjZpNWhmWkZIa3EKcW9QQjFPUm9ocVpNK1pNeVFzS1NwZHkwc1htNUdQZyswK0g2TmRCZ0lRS0NBUUVBd3VaYm10YzlEa3Q4MFdrZwptMnpTLzF5bWZUNzNraXpBeDFXZUVzUThtUG03ZVZYUVJtUFBoSGR2UElaamFmd2c4UEIrOFZXODBlMVJBQ3RuCjl3SWtzTVRZZDJnQVdpQlhJM0NCMEJoOHhaTElvc2hEYWlrVC8xcVh5L1J2UXM3L0VxbmpYMmRYQngzd1l5WEkKNkZnM3UwUm9tZHE1T3NIS0dReWV3UTZnTnNDZGRSV1EzdVRvNkJLRitkb3B6MXo0aE5hRklhcVFLNWJuYTV1Vgp4NC91RnFwRXFFKzF3MHlMbEhndGpKcjBkQkRkNjNvMFdjNzA0ZVFXWTViKzBFRE84NFl1YWp3V0Jad1VCcUNkCmFOY0s0NzhsSnFxTm1JVmEreHB3OTNOcDVqc3VES01JU2k4eWszUEVuTjBDY2hmTlQ3SDFBZ2Nnd0RFNCtGZzcKcWp4ZUJ3S0NBUUFIRis4QXFXV2Q5TVNTRnhtMzV4TTVzM3ZBL2o0L3lXM0krM0V6K2JreWZJZVQ1cFo3M05PYgorT2h2RWFSdTBGdGtZdFpXOUZYVVRTc1gyYU9samNiU3ZtZkJLajV6MjVkRkhEb1NUdUU5Qkh2THVoRUVPUzJpCkhLSmpKSnhwWndDMEZPaGdwZUtwMVV1RzJjV0NEaFRvQm1KQkJib0w0dU9QN1VjRTF1eVRhZ2FLTDBESjRhbHcKalNSNU5DWjgwZXFwdmJhRUovenl0a1Nxc2Q5ejZYd3dOOWRXeFFIOVdUbnRVRjNEeUp2cU94Yi9Bc3ZNWTdObwpIcW1PVVN4QzNKZmtRcXNWWkdNSU5ibVRBWlgyN1pmSnVody9LL3czWHJuZEtzU1dJOElHdU5WcFUrUHB6dlZuCnU4KzVkWk51eWhxUTNQUXR3YUpmb04yN1d4TUc3ajloQW9JQkFRQ0xRSkV1SVBLTzdRYkJBMU5BYlFwVkM2ZnQKTWJkQXVYYVAyTUU4cXBKOWdMYXZRdEViVlpVbXdrMktqMktxMFp3TTBaU3EvdWJYUU8xWGNJMjVhUG1abGZ3RQp5MTdzY0hvWjFaMC9iMmxTMHE4WXJ5YmJqZkptMjhEMGtXOE92djNheFlKbUh3U3laS3R6cmkzUkhhNENjK1JiCkFlcWdRZy9KWnhuTStCRU9Fb0hnak9lYWFZR2FpZXdsdmZWR0dTOS9TalM2TDNaNnVQaEdnanZMVm14MDdhUE4KRzU1WEFWZ1V2MGtaQWZPOEY0S2tGLzM2TmpabWpYMUVjK0FPZFR5UDh3N0VjY0dzaCtpU1pySm85ejJMREJNUwpocG80WWRmdnM3dzk5eUtkTWJhOTdNRkMwV244RFZaT1ZrckV0V0ZDUFYvK2xZVTBtMVdsdUpmVWw5cXYKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K\n    # API server specific configuration options.\n    apiServer:\n        image: registry.k8s.io/kube-apiserver:v1.33.2 # The container image used in the API server manifest.\n        # Extra certificate subject alternative names for the API server's certificate.\n        certSANs:\n            - 10.5.0.2\n            - 127.0.0.1\n        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.\n        # Configure the API server admission plugins.\n        admissionControl:\n            - name: PodSecurity # Name is the name of the admission controller.\n              # Configuration is an embedded configuration object to be used as the plugin's\n              configuration:\n                apiVersion: pod-security.admission.config.k8s.io/v1alpha1\n                defaults:\n                    audit: restricted\n                    audit-version: latest\n                    enforce: baseline\n                    enforce-version: latest\n                    warn: restricted\n                    warn-version: latest\n                exemptions:\n                    namespaces:\n                        - kube-system\n                    runtimeClasses: []\n                    usernames: []\n                kind: PodSecurityConfiguration\n        # Configure the API server audit policy.\n        auditPolicy:\n            apiVersion: audit.k8s.io/v1\n            kind: Policy\n            rules:\n                - level: Metadata\n        \n        # # Configure the API server authorization config. Node and RBAC authorizers are always added irrespective of the configuration.\n        # authorizationConfig:\n        #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.\n        #       name: webhook # Name is used to describe the authorizer.\n        #       # webhook is the configuration for the webhook authorizer.\n        #       webhook:\n        #         connectionInfo:\n        #             type: InClusterConfig\n        #         failurePolicy: Deny\n        #         matchConditionSubjectAccessReviewVersion: v1\n        #         matchConditions:\n        #             - expression: has(request.resourceAttributes)\n        #             - expression: '!(\\''system:serviceaccounts:kube-system\\'' in request.groups)'\n        #         subjectAccessReviewVersion: v1\n        #         timeout: 3s\n        #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.\n        #       name: in-cluster-authorizer # Name is used to describe the authorizer.\n        #       # webhook is the configuration for the webhook authorizer.\n        #       webhook:\n        #         connectionInfo:\n        #             type: InClusterConfig\n        #         failurePolicy: NoOpinion\n        #         matchConditionSubjectAccessReviewVersion: v1\n        #         subjectAccessReviewVersion: v1\n        #         timeout: 3s\n    # Controller manager server specific configuration options.\n    controllerManager:\n        image: registry.k8s.io/kube-controller-manager:v1.33.2 # The container image used in the controller manager manifest.\n    # Kube-proxy server-specific configuration options\n    proxy:\n        image: registry.k8s.io/kube-proxy:v1.33.2 # The container image used in the kube-proxy manifest.\n        \n        # # Disable kube-proxy deployment on cluster bootstrap.\n        # disabled: false\n    # Scheduler server specific configuration options.\n    scheduler:\n        image: registry.k8s.io/kube-scheduler:v1.33.2 # The container image used in the scheduler manifest.\n    # Configures cluster member discovery.\n    discovery:\n        enabled: true # Enable the cluster membership discovery feature.\n        # Configure registries used for cluster member discovery.\n        registries:\n            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information\n            kubernetes:\n                disabled: true # Disable Kubernetes discovery registry.\n            # Service registry is using an external service to push and pull information about cluster members.\n            service: {}\n            # # External service endpoint.\n            # endpoint: https://discovery.talos.dev/\n    # Etcd specific configuration options.\n    etcd:\n        # The `ca` is the root certificate authority of the PKI.\n        ca:\n            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNPZ0F3SUJBZ0lRTjJINkc4NHBuQXFjb0hrS09odzhOakFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEkxTURjeU9UQXpNRFV5TUZvWERUTTFNRGN5TnpBek1EVXlNRm93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkN6ZzRVK0xScVoyClEyZU1oSTVmTTBwOVdKUjhVTU5BQTRBQVY1bUNEOEQvaDVCNG5wR1dkU3BWSktNQ2JFb2VlbGc3bEVwbDI0SkYKV2s4QWtEL1NGSzJqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVSEI0VjdEWE52TEw1ClFkeXBzelZ2eFFoN3M2RXdDZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBUHdHbzlVYWNZOGRsWC9KRHI0ZGVvWisKSjE1M0piZlR4UXZDU2x4TnY3RWFBaUVBcm9GdEZkdUkzQzRSYkVPNmNMVnpSSGp3NjdqcGdvTFdFNTdlNzhDUApmMlU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSVBRWTZra1orM2pZd1REWHlRQ0xzRk1HM1g1Q1h2YWlEVnlmcHNyQU9NTVdvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFTE9EaFQ0dEdwblpEWjR5RWpsOHpTbjFZbEh4UXcwQURnQUJYbVlJUHdQK0hrSGlla1paMQpLbFVrb3dKc1NoNTZXRHVVU21YYmdrVmFUd0NRUDlJVXJRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=\n        \n        # # The container image used to create the etcd service.\n        # image: gcr.io/etcd-development/etcd:v3.5.21\n\n        # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.\n        # advertisedSubnets:\n        #     - 10.0.0.0/8\n    # A list of urls that point to additional manifests.\n    extraManifests: []\n    #   - https://www.example.com/manifest1.yaml\n    #   - https://www.example.com/manifest2.yaml\n\n    # A list of inline Kubernetes manifests.\n    inlineManifests: []\n    #   - name: namespace-ci # Name of the manifest.\n    #     contents: |- # Manifest contents as a string.\n    #       apiVersion: v1\n    #       kind: Namespace\n    #       metadata:\n    #       \tname: ci\n\n    \n    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).\n\n    # # Decryption secret example (do not use in production!).\n    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=\n\n    # # Core DNS specific configuration options.\n    # coreDNS:\n    #     image: registry.k8s.io/coredns/coredns:v1.12.1 # The `image` field is an override to the default coredns image.\n\n    # # External cloud provider configuration.\n    # externalCloudProvider:\n    #     enabled: true # Enable external cloud provider.\n    #     # A list of urls that point to additional manifests for an external cloud provider.\n    #     manifests:\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml\n    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml\n\n    # # A map of key value pairs that will be added while fetching the extraManifests.\n    # extraManifestHeaders:\n    #     Token: \"1234567\"\n    #     X-ExtraInfo: info\n\n    # # Settings for admin kubeconfig generation.\n    # adminKubeconfig:\n    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).\n\n    # # Allows running workload on control-plane nodes.\n    # allowSchedulingOnControlPlanes: true\n"
